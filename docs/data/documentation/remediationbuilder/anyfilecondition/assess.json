{"hierarchy":{"paths":[["doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder","doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyFileCondition"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/remediationbuilder\/anyfilecondition\/assess"]}],"metadata":{"symbolKind":"property","role":"symbol","title":"assess","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"assess"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:18RemediationBuilder20XPPluginPathProtocolP","kind":"typeIdentifier","text":"XPPluginPathProtocol"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"roleHeading":"Instance Property","externalID":"s:18RemediationBuilder16AnyFileConditionV6assessySbAA20XPPluginPathProtocol_pcvp","modules":[{"name":"RemediationBuilder"}]},"identifier":{"url":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyFileCondition\/assess","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"assess"},{"kind":"text","text":": (any "},{"identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/XPPluginPathProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18RemediationBuilder20XPPluginPathProtocolP","text":"XPPluginPathProtocol"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://RemediationBuilder/documentation/RemediationBuilder/AnyFileCondition/assess":{"type":"topic","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyFileCondition\/assess","role":"symbol","title":"assess","url":"\/documentation\/remediationbuilder\/anyfilecondition\/assess","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"assess"},{"kind":"text","text":": (any "},{"preciseIdentifier":"s:18RemediationBuilder20XPPluginPathProtocolP","kind":"typeIdentifier","text":"XPPluginPathProtocol"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","abstract":[]},"doc://RemediationBuilder/documentation/RemediationBuilder":{"url":"\/documentation\/remediationbuilder","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder","type":"topic","kind":"symbol","abstract":[{"text":"A Domain Specific Language for declaratively describing malware remediation (or detection) conditions and logic.","type":"text"}],"title":"RemediationBuilder","role":"collection"},"doc://RemediationBuilder/documentation/RemediationBuilder/AnyFileCondition":{"navigatorTitle":[{"text":"AnyFileCondition","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyFileCondition","url":"\/documentation\/remediationbuilder\/anyfilecondition","abstract":[{"text":"Type-erased wrapper that allows any concrete struct conforming to ","type":"text"},{"code":"FileCondition","type":"codeVoice"},{"text":" to be stored in a heterogeneous collection.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyFileCondition","kind":"identifier"}],"title":"AnyFileCondition","kind":"symbol","role":"symbol"},"doc://RemediationBuilder/documentation/RemediationBuilder/XPPluginPathProtocol":{"type":"topic","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/XPPluginPathProtocol","role":"symbol","title":"XPPluginPathProtocol","url":"\/documentation\/remediationbuilder\/xppluginpathprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XPPluginPathProtocol"}],"kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"XPPluginPathProtocol"}]}}}