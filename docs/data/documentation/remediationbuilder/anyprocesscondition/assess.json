{"metadata":{"symbolKind":"property","role":"symbol","title":"assess","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"assess"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","preciseIdentifier":"s:18RemediationBuilder17XPProcessProtocolP","text":"XPProcessProtocol"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Property","externalID":"s:18RemediationBuilder19AnyProcessConditionV6assessySbAA17XPProcessProtocol_pcvp","modules":[{"name":"RemediationBuilder"}]},"identifier":{"url":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyProcessCondition\/assess","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder","doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyProcessCondition"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/remediationbuilder\/anyprocesscondition\/assess"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"assess"},{"kind":"text","text":": (any "},{"identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/XPProcessProtocol","preciseIdentifier":"s:18RemediationBuilder17XPProcessProtocolP","kind":"typeIdentifier","text":"XPProcessProtocol"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://RemediationBuilder/documentation/RemediationBuilder":{"url":"\/documentation\/remediationbuilder","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder","type":"topic","kind":"symbol","abstract":[{"text":"A Domain Specific Language for declaratively describing malware remediation (or detection) conditions and logic.","type":"text"}],"title":"RemediationBuilder","role":"collection"},"doc://RemediationBuilder/documentation/RemediationBuilder/XPProcessProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XPProcessProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"XPProcessProtocol"}],"abstract":[],"identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/XPProcessProtocol","url":"\/documentation\/remediationbuilder\/xpprocessprotocol","type":"topic","kind":"symbol","title":"XPProcessProtocol"},"doc://RemediationBuilder/documentation/RemediationBuilder/AnyProcessCondition/assess":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyProcessCondition\/assess","title":"assess","url":"\/documentation\/remediationbuilder\/anyprocesscondition\/assess","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assess","kind":"identifier"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:18RemediationBuilder17XPProcessProtocolP","text":"XPProcessProtocol","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://RemediationBuilder/documentation/RemediationBuilder/AnyProcessCondition":{"navigatorTitle":[{"text":"AnyProcessCondition","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/RemediationBuilder\/documentation\/RemediationBuilder\/AnyProcessCondition","url":"\/documentation\/remediationbuilder\/anyprocesscondition","abstract":[{"text":"Type-erased wrapper that allows any concrete struct conforming to ","type":"text"},{"code":"ProcessCondition","type":"codeVoice"},{"text":" to be stored in a heterogeneous collection.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyProcessCondition","kind":"identifier"}],"title":"AnyProcessCondition","kind":"symbol","role":"symbol"}}}